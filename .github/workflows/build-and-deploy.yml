on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_api:
    name: build api
    runs-on: ubuntu-22.04

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            suffix=-${{ github.run_id }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: services/api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}-api
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: services/ingest/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}-ingest
          labels: ${{ steps.meta.outputs.labels }}

  build_ui:
    name: build ui
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm i

      - name: Build ui
        run: |
          pnpm --filter=@critter/ui build
          pnpm --filter=@critter/ui deploy app

      - name: Publish build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ui-build
          path: app

  deploy:
    name: deploy to development
    runs-on: ubuntu-22.04
    needs:
      - build_ui
      - build_api

    environment: development
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          name: ui-build
          path: ui

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm i

      - uses: pulumi/actions@v4
        id: pulumi
        with:
          command: up
          stack-name: dev
          work-dir: infrastructure/pulumi
          config-map: |
            {
              "api-image": { value: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}", secret: false },
              "api-tag": { value: "main-${{ github.run_id }}-api", secret: false }
            }
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: az cli login
        uses: azure/login@v1
        with:
          creds: '{"resourceManagerEndpointUrl": "https://management.azure.com/", "tenantId": "${{ secrets.ARM_TENANT_ID }}", "clientId": "${{ secrets.ARM_CLIENT_ID }}", "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}", "subscriptionId": "${{ secrets.ARM_SUBSCRIPTION_ID }}"}'

      - name: az cli copy
        uses: azure/CLI@v1
        with:
          azcliversion: 2.53.0
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az storage azcopy blob upload --container \$web --source "./ui/*" --account-name ${{ steps.pulumi.outputs.accountName }} --recursive
            az cdn endpoint purge --resource-group ${{ steps.pulumi.outputs.resourceGroupName }} --name ${{ steps.pulumi.outputs.endpointName }} --profile-name ${{ steps.pulumi.outputs.profileName }} --content-paths "/*"
